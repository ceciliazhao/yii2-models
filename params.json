{"name":"yii2-models","tagline":"","body":"Models for Yii 2\r\n================\r\n\r\nThis extension provide a BaseEntityModel.\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/vistart/yii2-models/v/stable)](https://packagist.org/packages/vistart/yii2-models)\r\n[![Total Downloads](https://poser.pugx.org/vistart/yii2-models/downloads)](https://packagist.org/packages/vistart/yii2-models)\r\n[![Monthly Downloads](https://poser.pugx.org/vistart/yii2-models/d/monthly)](https://packagist.org/packages/vistart/yii2-models)\r\n[![Daily Downloads](https://poser.pugx.org/vistart/yii2-models/d/daily)](https://packagist.org/packages/vistart/yii2-models)\r\n[![Latest Unstable Version](https://poser.pugx.org/vistart/yii2-models/v/unstable)](https://packagist.org/packages/vistart/yii2-models)\r\n[![License](https://poser.pugx.org/vistart/yii2-models/license)](https://packagist.org/packages/vistart/yii2-models)\r\n\r\nThe BaseEntityModel would help you to fill the following attribute(s) automatically:\r\n* GUID\r\n* ID\r\n* createdAt and updatedAt\r\n* IP address\r\n\r\nPlease see detailed usage in the comments of code.\r\n\r\nInstallation\r\n------------\r\n\r\nThe preferred way to install this extension is through [composer](http://getcomposer.org/download/).\r\n\r\nEither run\r\n\r\n```\r\nphp composer.phar require --prefer-dist vistart/yii2-models \"*\"\r\n```\r\n\r\nor add\r\n\r\n```\r\n\"vistart/yii2-models\": \"*\"\r\n```\r\n\r\nto the require section of your `composer.json` file.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nOnce the extension is installed, simply use it in your code by  :\r\n\r\n```php\r\nuse vistart\\Models\\BaseEntityModel;\r\n\r\nclass Example extends BaseEntityModel\r\n{\r\n    /**\r\n     * @var string The GUID attribute name. This property is REQUIRED, because \r\n     * we believe that this property corresponds to the primary key in the \r\n     * database.\r\n     */\r\n    public $guidAttribute = 'Your GUID Attribute Name';\r\n\r\n    /**\r\n     * @var string The ID attribute name. This property is OPTIONAL, if you do\r\n     * not want to use this feature, please set it to false.\r\n     */\r\n    public $idAttribute = false;\r\n    \r\n    /**\r\n     * @var integer The length of id attribute value. This property is OPTIONAL.\r\n     * If you set $idAttribute to false, this property will be ignored.\r\n     */\r\n    public $idAttributeLength = 4;\r\n\r\n    /**\r\n     * @var string the attribute that will receive datetime value\r\n     * Set this property to false if you do not want to record the creation time.\r\n     */\r\n    public $createdAtAttribute = 'Your createdAt Attribute Name';\r\n\r\n    /**\r\n     * @var string the attribute that will receive datetime value.\r\n     * Set this property to false if you do not want to record the update time.\r\n     */\r\n    public $updatedAtAttribute = 'Your updatedAt Attribute Name';\r\n    \r\n    /**\r\n     * @var boolean Determine to enable the IP address feature. The default\r\n     * value of this property is true, if you do not want to use this feature, \r\n     * please set it to false, then the five subsequence properties and \r\n     * correspoding validation rules will be ignored.\r\n     */\r\n    public $enableIP = true.\r\n\r\n    /**\r\n     * @var string The attribute name that will receive the beginning 32 bits of\r\n     * IPv6, or 0 of IPv4.\r\n     */\r\n    public $ipAttribute1 = 'Your IP_1 Attribute Name';\r\n\r\n    /**\r\n     * @var string The attribute name that will receive the 33 - 64 bits of IPv6,\r\n     * or 0 of IPv4.\r\n     */\r\n    public $ipAttribute2 = 'Your IP_2 Attribute Name';\r\n\r\n    /**\r\n     * @var string The attribute name that will receive the 65 - 96 bits of IPv6,\r\n     * or 0 of IPv4.\r\n     */\r\n    public $ipAttribute3 = 'Your IP_3 Attribute Name';\r\n\r\n    /**\r\n     * @var string The attribute name that will receive the last 32 bits of IPv6,\r\n     * or IPv4.\r\n     */\r\n    public $ipAttribute4 = 'Your IP_4 Attribute Name';\r\n\r\n    /**\r\n     * @var string The attribute name that will receive the type of IP address.\r\n     */\r\n    public $ipTypeAttribute = 'Your IP type Attribute Name';\r\n    \r\n    /**\r\n     * This method has been implemented in BaseEntityModel, if you want to add \r\n     * validation rule(s), please implement your own rules array first, and \r\n     * merge the parent's and your's, then return it, DO NOT override it directly.\r\n     * @return array Validation rules.\r\n     */\r\n    public function rules()\r\n    {\r\n        $rules = ['Your Rules'];\r\n        return array_merge(parent::rules(), $rules);\r\n    }\r\n\r\n    /**\r\n     * This method has been implemented in BaseEntityModel, if you want to add\r\n     * behaviors, please implement your own behaviors array first, and merge\r\n     * the parent's and your's, then return it, DO NOT override it directly.\r\n     * @return array Behaviors.\r\n     */\r\n    public function behaviors()\r\n    {\r\n        $behaviors = ['Your Behaviors'];\r\n        return array_merge(parent::behaviors(), $behaviors);\r\n    }\r\n\r\n    /**\r\n     * This method has been implemented in BaseEntityModel, please DO NOT \r\n     * override it.\r\n     * This method does not return a value.\r\n     */\r\n    protected function initDefaultValues()\r\n    {\r\n        'Initialize attributes...'\r\n        parent::initDefaultValues();\r\n    }\r\n...\r\n}\r\n```\r\n\r\nIf you have some ActiveRecord need to be blamed, mayby you are interested in BaseBlameableEntityModel, the basic usage is following:\r\n~~~php\r\nclass Example extends BaseBlameableEntityModel\r\n{\r\n    /**\r\n     * @var string the attribute that will receive current user's GUID value.\r\n     * Set this property to false if you do not want to record the creator ID.\r\n     */\r\n    public $createdByAttribute = 'user_uuid';\r\n\r\n    /**\r\n     * @var string the attribute that will receive current user's GUID value.\r\n     * Set this property to false if you do not want to record the updater ID.\r\n     */\r\n    public $updatedByAttribute = 'updater_uuid';\r\n\r\n    /**\r\n     * @var string the attribute that specify the name of id of \r\n     * Yii::$app->user->identity.\r\n     */\r\n    public $identityUuidAttribute = 'user_uuid';\r\n\r\n    // the usage of rules(), behaviors, and initDefaultValues() are same as \r\n    // those of BaseEntityModel.\r\n}\r\n~~~\r\n\r\nContact Us\r\n----------\r\n\r\n[![Join the chat at https://gitter.im/vistart/yii2-models](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/vistart/yii2-models?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nIf you have any problems or good ideas about yii2-models, please discuss there, or send an email to i@vistart.name. Thank you!\r\n\r\nIf you want to send an email with your issues, please briefly introduce yourself first, for instance including your title and github homepage.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}